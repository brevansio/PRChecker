
fragment PRInfo on PullRequest {
    id
        
    isReadByViewer
    url
        
    repository {
        id
        nameWithOwner
    }
    baseRefName
    headRefName
        
    author {
        login
    }
    title
    body
        
    changedFiles
    additions
    deletions
    commits(last: 100) {
        nodes {
            id
        }
    }
    labels(last: 10) {
        nodes {
            id
            name
            color
        }
    }

    state
    reviews(last: 100) {
        nodes {
            author {
                login
            }
            state
        }
    }
    
    mergedAt
    updatedAt
}

fragment OldPRInfo on PullRequest {
    id
        
    url
        
    repository {
        id
        nameWithOwner
    }
    baseRefName
    headRefName
        
    author {
        login
    }
    title
    body
        
    changedFiles
    additions
    deletions
    commits(last: 100) {
        nodes {
            id
        }
    }
    labels(last: 10) {
        nodes {
            id
            name
            color
        }
    }

    state
    reviews(last: 100) {
        nodes {
            author {
                login
            }
            state
        }
    }
    mergedAt
    updatedAt
}

query GetPRsByAuthor($author: String!) {
    user(login: $author) {
        id
        name
        pullRequests(last: 25, orderBy: { field:UPDATED_AT, direction:DESC }, states: [OPEN, MERGED]) {
            nodes {
                ...PRInfo
            }
        }
    }
}

query GetAssignedPRsWithQuery($query: String!) {
    search(last: 25, query: $query, type: ISSUE) {
        edges {
            node {
                ... on PullRequest {
                    ...PRInfo
                }
            }
        }
    }
}

query GetOldAssignedPRsWithQuery($query: String!) {
    search(last: 25, query: $query, type: ISSUE) {
        edges {
            node {
                ... on PullRequest {
                    ...OldPRInfo
                }
            }
        }
    }
}
